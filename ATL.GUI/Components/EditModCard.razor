@using ATL.Core.Config.GUI
@using ATL.Core.Libraries

<MudCard>
  <MudCardHeader>
    <CardHeaderContent>
      <MudStack Row="@true" Spacing="2" Class="align-center">
        <MudSelect
          T="string"
          Label="Mod"
          Variant="Variant.Outlined"
          Value="@SelectedModId"
          ValueChanged="@SelectedModIdChanged"
          Margin="Margin.Dense"
          FullWidth="@true"
          Style="@(SelectedModId == ConstantsLibrary.InvalidString ? "font-style: italic" : "")"
        >
          <MudSelectItem
            Value="@(ConstantsLibrary.InvalidString)"
            Disabled="@true"
            Style="font-style: italic"
          >None</MudSelectItem>
          @foreach (var (modContentId, modContentVersionConfig) in ModConfigs)
          {
            var versionCount = modContentVersionConfig.Versions.Count;
            
            <MudSelectItem Value="@(modContentId)">
              @(modContentVersionConfig.Title)<span style="opacity: 75%"> &bull; @(versionCount) version@(versionCount != 1 ? "s" : "")</span>
            </MudSelectItem>
          }
        </MudSelect>

        <MudIconButton
          Icon="@Icons.Material.Filled.Add"
          Color="Color.Primary"
          Variant="Variant.Filled"
          OnClick="@CreateModConfig"
        />
      </MudStack>
    </CardHeaderContent>
  </MudCardHeader>

  @{
    var disabled = !ModConfigs.ContainsKey(SelectedModId);
    var edited = false;
    if (ModConfigs.TryGetValue(SelectedModId, out var modConfig))
    {
      edited = !MutableModConfig.Equals(modConfig);
    }
    
    <MudCardContent Class="d-flex flex-column gap-2 pt-0">
      <MudTextField
        T="string"
        Label="Title"
        @bind-Value="@MutableModConfig.Title"
        Immediate="@true"
        Variant="@Variant.Outlined"
        Margin="Margin.Dense"
        Disabled="@disabled"
      />

      <MudTextField
        T="string"
        Label="Description"
        @bind-Value="@MutableModConfig.Description"
        Immediate="@true"
        Variant="@Variant.Outlined"
        Margin="Margin.Dense"
        Lines="3"
        AutoGrow="@true"
        Disabled="@disabled"
      />

      <MudSelect
        Label="Type"
        Variant="Variant.Outlined"
        @bind-Value="@(MutableModConfig.Type)"
        Margin="Margin.Dense"
        FullWidth="@true"
        Disabled="@disabled"
      >
        @foreach (var value in Enum.GetValues<ModType>())
        {
          <MudSelectItem Value="@(value)">@(value)</MudSelectItem>
        }
      </MudSelect>
    </MudCardContent>

    <MudCardActions Class="justify-end gap-2">
      <MudButton
        Variant="Variant.Outlined"
        Disabled="@(disabled || !edited)"
        OnClick="@ResetModConfig"
      >Reset</MudButton>

      <MudButton
        Variant="Variant.Filled"
        Color="Color.Primary"
        Disabled="@(disabled || !edited)"
        OnClick="@SaveModConfig"
      >Confirm</MudButton>
    </MudCardActions>
  }
</MudCard>